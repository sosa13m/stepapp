workflows:
  android_capacitor_debug:
    name: Android (Capacitor) – Debug APK
    environment:
      node: 18
    scripts:
      - name: Resolver Java 17 y Android SDK (macOS)
        script: |
          # Java 17
          export JAVA_HOME=$(/usr/libexec/java_home -v 17)
          echo "JAVA_HOME=$JAVA_HOME"
          java -version
          # Forzar a Gradle a usar esta JDK
          echo "org.gradle.java.home=$JAVA_HOME" >> android/gradle.properties

          # Android SDK root de Codemagic (macOS)
          export ANDROID_SDK_ROOT=/usr/local/share/android-sdk

          # Añadir platform-tools y (si existe) cmdline-tools/latest al PATH
          export PATH="$PATH:$ANDROID_SDK_ROOT/platform-tools:$ANDROID_SDK_ROOT/emulator"
          if [ -d "$ANDROID_SDK_ROOT/cmdline-tools/latest/bin" ]; then
            export PATH="$PATH:$ANDROID_SDK_ROOT/cmdline-tools/latest/bin"
            SDKMANAGER="$ANDROID_SDK_ROOT/cmdline-tools/latest/bin/sdkmanager"
          else
            # fallback: 1ª carpeta de cmdline-tools disponible
            SDKMANAGER=$(ls -d $ANDROID_SDK_ROOT/cmdline-tools/*/bin 2>/dev/null | head -n1)/sdkmanager
            export PATH="$PATH:$(dirname "$SDKMANAGER")"
          fi
          "$SDKMANAGER" --version

      - name: Instalar Android SDK 35
        script: |
          yes | sdkmanager "platforms;android-35" "build-tools;35.0.0" "platform-tools"

      - name: Instalar dependencias
        script: |
          npm ci

      - name: Sincronizar Capacitor (genera/actualiza ./android)
        script: |
          npx cap sync android

      - name: Compilar APK debug con Gradle
        script: |
          cd android
          ./gradlew clean assembleDebug

    artifacts:
      - android/app/build/outputs/apk/debug/app-debug.apk
